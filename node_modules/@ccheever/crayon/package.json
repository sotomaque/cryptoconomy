{
  "_args": [
    [
      {
        "raw": "@ccheever/crayon@^5.0.0",
        "scope": "@ccheever",
        "escapedName": "@ccheever%2fcrayon",
        "name": "@ccheever/crayon",
        "rawSpec": "^5.0.0",
        "spec": ">=5.0.0 <6.0.0",
        "type": "range"
      },
      "/Users/enrique/Desktop/crypto-markets/node_modules/xdl"
    ]
  ],
  "_from": "@ccheever/crayon@>=5.0.0 <6.0.0",
  "_id": "@ccheever/crayon@5.0.0",
  "_inCache": true,
  "_location": "/@ccheever/crayon",
  "_nodeVersion": "1.8.1",
  "_npmUser": {
    "name": "ccheever",
    "email": "ccheever@gmail.com"
  },
  "_npmVersion": "2.8.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@ccheever/crayon@^5.0.0",
    "scope": "@ccheever",
    "escapedName": "@ccheever%2fcrayon",
    "name": "@ccheever/crayon",
    "rawSpec": "^5.0.0",
    "spec": ">=5.0.0 <6.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/xdl"
  ],
  "_resolved": "https://registry.npmjs.org/@ccheever/crayon/-/crayon-5.0.0.tgz",
  "_shasum": "a7192753c1c25d7588ed01d6058c64c457a71c63",
  "_shrinkwrap": null,
  "_spec": "@ccheever/crayon@^5.0.0",
  "_where": "/Users/enrique/Desktop/crypto-markets/node_modules/xdl",
  "author": {
    "name": "Charlie Cheever",
    "email": "ccheever@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/aceface/crayon/issues"
  },
  "dependencies": {
    "has-color": "^0.1.7",
    "strip-ansi": "^0.2.1"
  },
  "description": "crayon - Add colors to text on your terminal. A faster replacement for chalk that also adds 256 color support",
  "devDependencies": {
    "coffee-script": "^1.7.1",
    "jest-cli": "^0.1.14"
  },
  "directories": {},
  "dist": {
    "shasum": "a7192753c1c25d7588ed01d6058c64c457a71c63",
    "tarball": "https://registry.npmjs.org/@ccheever/crayon/-/crayon-5.0.0.tgz"
  },
  "gitHead": "96dcd5e85fd099c96a889522bfba9674efa676c2",
  "homepage": "https://github.com/aceface/crayon",
  "jest": {
    "scriptPreprocessor": "jest-preprocessor.js",
    "testFileExtensions": [
      "coffee",
      "js"
    ]
  },
  "license": "MIT",
  "main": "crayon.js",
  "maintainers": [
    {
      "name": "ccheever",
      "email": "ccheever@gmail.com"
    }
  ],
  "name": "@ccheever/crayon",
  "optionalDependencies": {},
  "readme": "# <img width=\"200\" height=\"200\" src=\"logo.png\" alt=\"crayon\"> crayon\n=====\n\nA very fast, clean, and flexible way to use ANSI colors on your terminal. Crayon supports 256 colors, a clean and chainable API, a few other nifty features, and built-in logging.\n\nIt works as a drop-in replacement for [chalk](https://github.com/sindresorhus/chalk), but is much faster (~20x) and has additional features. Like chalk, it doesn't monkeypatch the `String` prototype the way that the popular [colors](https://github.com/marak/colors.js/) module does.\n\n## Usage\n\n```js\nvar crayon = require('crayon');\n\n// Log a string\ncrayon.red.log('This is red');\n\n// Style a string\nconsole.log(crayon.blue('Hello world!'))\n\n// Use any CSS color name\ncrayon.olivedrab.bgOldlace.info(\"cute\");\n\n// Use hex colors\ncrayon(\"#ffcc00\").log(\"old gold\");\n\n// Use ANSI color codes\ncrayon(100).log(\"look at me\");\n\n// Combine styled and normal strings\nconsole.log(  crayon.blue('Hello'), 'World' + crayon.red('!')  );\n\n// Compose multiple styles using the chainable API\nconsole.log(  crayon.blue.bgRed.bold('Hello world!')  );\n\n// Or just compose styles by passing strings to the crayon function\ncrayon('red bgblue').log('this is red on a blue background');\n\n// Nest styles\nconsole.log(  crayon.red('Hello', crayon.underline.bgBlue('world') + '!')  );\n\n// Pass in multiple arguments\ncrayon.blue.info('Hello', 'World!', 'Foo', 'bar', 'biz', 'baz');\n\n// Specify multiple styles\ncrayon(\"goldenrod\", \"bg:blue\", \"inverse\").underline.log(\"Hi!\");\n\n// Specify foreground and background colors\ncrayon.foreground(\"#ffffff\").background(\"crimson\").log(\"school!\");\ncrayon.fg(\"navy\").bg(\"#ffcc00\").log(\"spirit!\");\ncrayon.fgbg(\"white\", \"red\").underline.error(\"whew\");\ncrayon.red._(\"background:goldenrod\").inverse.log(\"goldenrod on red\");\n\n// Specify a custom logger\ncrayon.logger = require('npmlog');\n\n```\n\nFor color descriptions passed to functions, you can use any of the following:\n- The name of any CSS color (case-insensitive)\n- Any hex color (case-insensitive, leading '#' is optional)\n- Any ANSI color code 0-255 as a Number\n\n## Notes\n\n- Depending on your settings, there may be a difference between the system red color and the color most closely matching the CSS color red. In the case of color name collisions, `crayon.red` will give you the system color and `crayon.red_` will give you the CSS color.\n- For functions that aren't specific about whether they take a foreground or a background argument, you can pass `bg:<color>` or `background: <color>` or `bg<Color>` or similar, etc. to change the background color.\n- The reason that this module is much faster than chalk is that chalk remakes the style functions each time you call them whereas crayon keeps them around if you reuse them.\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/aceface/crayon.git"
  },
  "scripts": {
    "test": "jest"
  },
  "version": "5.0.0"
}
